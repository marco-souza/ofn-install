---
- name: provision
  hosts: ofn_servers
  remote_user: "{{ user }}"

  vars:
    nginx_daemon_mode: off

  roles:
    - role: ssh_keys # Add sysadmin ssh keys to server
      become: yes
      tags: ssh_keys

    - role: geerlingguy.security
      become: yes
      become_user: root
      tags: security

    - role: oefenweb.swapfile
      become: yes
      when: swapfile_size != false
      tags: swapfile

    - role: unicorn_user # Create unprivileged user to run unicorn
      tags: unicorn_user

    - role: common # Install common apps and libraries, and setup shell.
      tags: common

    - role: language # Setup locale.
      tags: language

    - role: zzet.rbenv # Install ruby. If missing run: ansible-galaxy install zzet.rbenv
      rbenv:
        env: user
        version: v1.0.0
        default_ruby: "{{ ruby_version }}"
        rubies:
          - version: "{{ ruby_version }}"

      rbenv_users:
        - "{{ unicorn_user }}"
      tags: ruby

    - role: bundler # Install bundler on its own here as it has to be installed after zzet.rbenv
      become: yes
      become_user: "{{ unicorn_user }}"
      tags: bundler

    - role: app # Build the app directory structure and support files.
      become: yes
      become_user: "{{ unicorn_user }}"
      tags: app

    - role: dbserver # Set up database server and user for the app.
      tags: dbserver
      db_user_roles: CREATEDB

    - role: coopdevs.certbot_nginx
      become: yes
      vars:
        domain_name: "{{ certbot_domains | default([domain]) | join(',') }}"
        letsencrypt_email: "{{ developer_email }}"
        cert_name: "{{ certbot_cert_name }}"
        letsencrypt_staging: yes
      when: inventory_hostname != "local_vagrant"
      tags: certbot

    - role: jdauphant.nginx
      become: yes
      tags: nginx

    - role: webserver # Build the unicorn webserver.
      tags: webserver
